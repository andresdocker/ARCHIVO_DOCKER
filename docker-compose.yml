version: '3.8'

services:
  # -------------------------
  # Nginx (Proxy Reverso)
  # -------------------------
  nginx:
    image: nginx:latest
    container_name: dockerandres-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Archivo generado dinámicamente
      - ./index.html:/usr/share/nginx/html/index.html
      - ./img:/usr/share/nginx/html/img
    depends_on:
      - jenkins
      - portainer
      - web-nginx-pgsql
      - owncloud
    networks:
      - zabbix-net
    environment:
      HOST_IP: "${HOST_IP}" # Variable dinámica tomada del archivo .env
    command: nginx -g 'daemon off;'

  # -------------------------
  # Jenkins
  # -------------------------
  jenkins:
    image: jenkins/jenkins:lts
    container_name: dockerandres-jenkins
    restart: always
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      - zabbix-net
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
      HOST_IP: "${HOST_IP}" # Pasar la IP dinámica como variable

  # -------------------------
  # OwnCloud (con inicialización automática)
  # -------------------------
  owncloud:
    image: owncloud/server:latest
    container_name: dockerandres-owncloud
    ports:
      - "8081:8080"
    networks:
      - zabbix-net
    volumes:
      - owncloud_data:/mnt/data # Volumen persistente para datos
    entrypoint: >
      sh -c "
      if [ ! -f /mnt/data/config/config.php ]; then
        echo 'Inicializando configuración de OwnCloud...';
        mkdir -p /mnt/data/config;
        cp /var/www/html/config/config.sample.php /mnt/data/config/config.php;
        sed -i \"s|'trusted_domains' => \[\]|'trusted_domains' => ['${HOST_IP}']|g\" /mnt/data/config/config.php;
      fi;
      exec /usr/bin/entrypoint.sh owncloud"

  # -------------------------
  # PostgreSQL (Base de datos para Zabbix)
  # -------------------------
  postgres-server:
    image: postgres:13-alpine
    container_name: dockerandres-postgres-server
    environment:
      POSTGRES_PASSWORD: zabbix
      POSTGRES_USER: zabbix
      POSTGRES_DB: zabbix
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zabbix-net

  # -------------------------
  # Zabbix Server
  # -------------------------
  server:
    image: zabbix/zabbix-server-pgsql
    container_name: dockerandres-server
    depends_on:
      - postgres-server
    environment:
      DB_SERVER_HOST: postgres-server
      POSTGRES_PASSWORD: zabbix
      POSTGRES_USER: zabbix
      POSTGRES_DB: zabbix
    ports:
      - "10051:10051"
    networks:
      - zabbix-net

  # -------------------------
  # Zabbix Frontend (Nginx)
  # -------------------------
  web-nginx-pgsql:
    image: zabbix/zabbix-web-nginx-pgsql
    container_name: dockerandres-web-nginx-pgsql
    depends_on:
      - server
      - postgres-server
    environment:
      DB_SERVER_HOST: postgres-server
      POSTGRES_PASSWORD: zabbix
      POSTGRES_USER: zabbix
      POSTGRES_DB: zabbix
      ZBX_SERVER_HOST: server
    ports:
      - "8084:8080"
    networks:
      - zabbix-net

  # -------------------------
  # Portainer
  # -------------------------
  portainer:
    image: portainer/portainer-ce:latest
    container_name: dockerandres-portainer
    restart: always
    ports:
      - "9000:9000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - zabbix-net

networks:
  zabbix-net:

volumes:
  owncloud_data:

